{"ast":null,"code":"import _objectSpread from\"C:/Users/farha/OneDrive/Desktop/TNS/Client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StaffAttendanceCard=_ref=>{let{apiPath=\"http://localhost:5000/api/attendance\",title,description,color}=_ref;const[view,setView]=useState(\"default\");const[staffList,setStaffList]=useState([]);const[attendance,setAttendance]=useState([]);const[newStaff,setNewStaff]=useState({staffId:\"\",staffName:\"\",email:\"\",contact:\"\"});const[attendanceRecord,setAttendanceRecord]=useState({});const[selectedDate,setSelectedDate]=useState(new Date().toISOString().split(\"T\")[0]);// Fetch all staff\nconst fetchStaff=async()=>{try{const response=await axios.get(\"\".concat(apiPath,\"/\"));const uniqueStaff=Array.from(new Map(response.data.map(staff=>[staff.staffId,staff])).values());setStaffList(uniqueStaff);}catch(error){console.error(\"Error fetching staff:\",error);}};// Fetch attendance data by date\nconst fetchAttendance=async date=>{try{const response=await axios.get(\"\".concat(apiPath,\"/?date=\").concat(date));if(response.data&&response.data.length>0){setAttendance(response.data);}else{setAttendance([]);// Set empty array if no data\n}}catch(error){console.error(\"Error fetching attendance:\",error);}};// Add new staff\nconst addStaff=async()=>{const{staffId,staffName}=newStaff;if(!staffId||!staffName){alert(\"All fields are required\");return;}try{const response=await axios.post(\"\".concat(apiPath,\"/staff\"),newStaff);if(response.status===201){alert(\"Staff added successfully\");setNewStaff({staffId:\"\",staffName:\"\"});fetchStaff();}else{alert(response.data.message||\"Error adding staff\");}}catch(error){console.error(\"Error adding staff:\",error);alert(\"Error adding staff. Please try again.\");}};// Save attendance\nconst saveAttendance=async()=>{try{const uniqueAttendance=new Map();Object.entries(attendanceRecord).forEach(_ref2=>{let[staffId,status]=_ref2;const staff=staffList.find(staff=>staff.staffId===staffId);if(staff){uniqueAttendance.set(staffId,{staffId,staffName:staff.staffName,status,date:selectedDate});}});const formattedAttendance=Array.from(uniqueAttendance.values());if(formattedAttendance.length>0){await axios.post(\"\".concat(apiPath,\"/attendance/mark\"),formattedAttendance);alert(\"Attendance saved successfully!\");// Reset attendance record after saving\nsetAttendanceRecord({});// Fetch fresh attendance data\nfetchAttendance(selectedDate);}else{alert(\"No valid attendance records to save.\");}}catch(error){console.error(\"Error saving attendance:\",error);alert(\"Already Marked for Today.\");}};// Handle attendance status change\nconst handleAttendanceChange=(staffId,status)=>{setAttendanceRecord(prevState=>_objectSpread(_objectSpread({},prevState),{},{[staffId]:status}));};// Handle view changes and fetch data accordingly\nuseEffect(()=>{if(view===\"mark\"){fetchStaff();// Fetch staff immediately when opening \"Mark Attendance\"\n}if(view===\"fetch\"){fetchAttendance(selectedDate);}},[view,selectedDate]);return/*#__PURE__*/_jsxs(\"div\",{className:\"card border-\".concat(color,\" mb-4 shadow-lg\"),children:[/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'25px'}}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'70px'}}),/*#__PURE__*/_jsx(\"div\",{className:\"card-header bg-\".concat(color,\" text-white\"),children:/*#__PURE__*/_jsx(\"h4\",{children:title})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"p\",{children:description}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3 d-flex justify-content-between\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary btn-lg\",onClick:()=>setView(\"add\"),children:\"Add Staff\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary btn-lg\",onClick:()=>setView(\"mark\"),children:\"Mark Attendance\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success btn-lg\",onClick:()=>setView(\"fetch\"),children:\"Fetch Data\"})]}),view===\"add\"&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Add Staff\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control mb-2\",placeholder:\"Enter staff ID\",value:newStaff.staffId,onChange:e=>setNewStaff(_objectSpread(_objectSpread({},newStaff),{},{staffId:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control mb-2\",placeholder:\"Enter staff name\",value:newStaff.staffName,onChange:e=>setNewStaff(_objectSpread(_objectSpread({},newStaff),{},{staffName:e.target.value}))})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success btn-lg\",onClick:addStaff,children:\"Add Staff\"})]}),view===\"mark\"&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Mark Attendance\"}),/*#__PURE__*/_jsxs(\"form\",{children:[staffList.map(staff=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3 d-flex justify-content-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:staff.staffName}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{className:\"mr-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"attendance-\".concat(staff.staffId),value:\"Present\",checked:attendanceRecord[staff.staffId]===\"Present\",onChange:()=>handleAttendanceChange(staff.staffId,\"Present\")}),\"Present\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"attendance-\".concat(staff.staffId),value:\"Absent\",checked:attendanceRecord[staff.staffId]===\"Absent\",onChange:()=>handleAttendanceChange(staff.staffId,\"Absent\")}),\"Absent\"]})]})]},staff.staffId)),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-warning btn-lg mt-3\",onClick:saveAttendance,children:\"Save Attendance\"})]})]}),view===\"fetch\"&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Fetch Attendance Records\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"date\",className:\"form-control mb-3\",value:selectedDate,onChange:e=>setSelectedDate(e.target.value)})}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped table-bordered\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:attendance.map(record=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:record.staffName}),/*#__PURE__*/_jsx(\"td\",{children:new Date(record.date).toLocaleDateString()}),/*#__PURE__*/_jsx(\"td\",{children:record.status})]},record._id))})]})]})]})]});};export default StaffAttendanceCard;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","StaffAttendanceCard","_ref","apiPath","title","description","color","view","setView","staffList","setStaffList","attendance","setAttendance","newStaff","setNewStaff","staffId","staffName","email","contact","attendanceRecord","setAttendanceRecord","selectedDate","setSelectedDate","Date","toISOString","split","fetchStaff","response","get","concat","uniqueStaff","Array","from","Map","data","map","staff","values","error","console","fetchAttendance","date","length","addStaff","alert","post","status","message","saveAttendance","uniqueAttendance","Object","entries","forEach","_ref2","find","set","formattedAttendance","handleAttendanceChange","prevState","_objectSpread","className","children","style","marginTop","onClick","type","placeholder","value","onChange","e","target","name","checked","record","toLocaleDateString","_id"],"sources":["C:/Users/farha/OneDrive/Desktop/TNS/Client/src/components/StaffAttendanceCard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst StaffAttendanceCard = ({ apiPath = \"http://localhost:5000/api/attendance\", title, description, color }) => {\r\n  const [view, setView] = useState(\"default\");\r\n  const [staffList, setStaffList] = useState([]);\r\n  const [attendance, setAttendance] = useState([]);\r\n  const [newStaff, setNewStaff] = useState({\r\n    staffId: \"\",\r\n    staffName: \"\",\r\n    email: \"\",\r\n    contact: \"\",\r\n  });\r\n  const [attendanceRecord, setAttendanceRecord] = useState({});\r\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\r\n\r\n  // Fetch all staff\r\n  const fetchStaff = async () => {\r\n    try {\r\n      const response = await axios.get(`${apiPath}/`);\r\n      const uniqueStaff = Array.from(new Map(response.data.map(staff => [staff.staffId, staff])).values());\r\n      setStaffList(uniqueStaff);\r\n    } catch (error) {\r\n      console.error(\"Error fetching staff:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch attendance data by date\r\n  const fetchAttendance = async (date) => {\r\n    try {\r\n      const response = await axios.get(`${apiPath}/?date=${date}`);\r\n      if (response.data && response.data.length > 0) {\r\n        setAttendance(response.data);\r\n      } else {\r\n        setAttendance([]); // Set empty array if no data\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance:\", error);\r\n    }\r\n  };\r\n\r\n  // Add new staff\r\n  const addStaff = async () => {\r\n    const { staffId, staffName } = newStaff;\r\n\r\n    if (!staffId || !staffName) {\r\n      alert(\"All fields are required\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(`${apiPath}/staff`, newStaff);\r\n      if (response.status === 201) {\r\n        alert(\"Staff added successfully\");\r\n        setNewStaff({ staffId: \"\", staffName: \"\" });\r\n        fetchStaff();\r\n      } else {\r\n        alert(response.data.message || \"Error adding staff\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding staff:\", error);\r\n      alert(\"Error adding staff. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Save attendance\r\n  const saveAttendance = async () => {\r\n    try {\r\n      const uniqueAttendance = new Map();\r\n\r\n      Object.entries(attendanceRecord).forEach(([staffId, status]) => {\r\n        const staff = staffList.find(staff => staff.staffId === staffId);\r\n        if (staff) {\r\n          uniqueAttendance.set(staffId, {\r\n            staffId,\r\n            staffName: staff.staffName,\r\n            status,\r\n            date: selectedDate,\r\n          });\r\n        }\r\n      });\r\n\r\n      const formattedAttendance = Array.from(uniqueAttendance.values());\r\n\r\n      if (formattedAttendance.length > 0) {\r\n        await axios.post(`${apiPath}/attendance/mark`, formattedAttendance);\r\n        alert(\"Attendance saved successfully!\");\r\n\r\n        // Reset attendance record after saving\r\n        setAttendanceRecord({});\r\n\r\n        // Fetch fresh attendance data\r\n        fetchAttendance(selectedDate);\r\n      } else {\r\n        alert(\"No valid attendance records to save.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving attendance:\", error);\r\n      alert(\"Already Marked for Today.\");\r\n    }\r\n  };\r\n\r\n  // Handle attendance status change\r\n  const handleAttendanceChange = (staffId, status) => {\r\n    setAttendanceRecord(prevState => ({\r\n      ...prevState,\r\n      [staffId]: status,\r\n    }));\r\n  };\r\n\r\n  // Handle view changes and fetch data accordingly\r\n  useEffect(() => {\r\n    if (view === \"mark\") {\r\n      fetchStaff();  // Fetch staff immediately when opening \"Mark Attendance\"\r\n    }\r\n    if (view === \"fetch\") {\r\n      fetchAttendance(selectedDate);\r\n    }\r\n  }, [view, selectedDate]);\r\n\r\n  return (\r\n    <div className={`card border-${color} mb-4 shadow-lg`}>\r\n             <div style={{ marginTop: '25px' }}></div>\r\n\r\n      <div style={{ marginTop: '70px' }}></div>\r\n\r\n      <div className={`card-header bg-${color} text-white`}>\r\n        <h4>{title}</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <p>{description}</p>\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"mb-3 d-flex justify-content-between\">\r\n          <button className=\"btn btn-primary btn-lg\" onClick={() => setView(\"add\")}>\r\n            Add Staff\r\n          </button>\r\n          <button className=\"btn btn-secondary btn-lg\" onClick={() => setView(\"mark\")}>\r\n            Mark Attendance\r\n          </button>\r\n          <button className=\"btn btn-success btn-lg\" onClick={() => setView(\"fetch\")}>\r\n            Fetch Data\r\n          </button>\r\n        </div>\r\n\r\n        {/* Add Staff View */}\r\n        {view === \"add\" && (\r\n          <div>\r\n            <h5>Add Staff</h5>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"Enter staff ID\"\r\n                value={newStaff.staffId}\r\n                onChange={(e) => setNewStaff({ ...newStaff, staffId: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"Enter staff name\"\r\n                value={newStaff.staffName}\r\n                onChange={(e) => setNewStaff({ ...newStaff, staffName: e.target.value })}\r\n              />\r\n            </div>\r\n            <button className=\"btn btn-success btn-lg\" onClick={addStaff}>\r\n              Add Staff\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Mark Attendance View */}\r\n        {view === \"mark\" && (\r\n          <div>\r\n            <h5>Mark Attendance</h5>\r\n            <form>\r\n              {staffList.map((staff) => (\r\n                <div key={staff.staffId} className=\"mb-3 d-flex justify-content-between\">\r\n                  <span>{staff.staffName}</span>\r\n                  <div>\r\n                    <label className=\"mr-2\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`attendance-${staff.staffId}`}\r\n                        value=\"Present\"\r\n                        checked={attendanceRecord[staff.staffId] === \"Present\"}\r\n                        onChange={() => handleAttendanceChange(staff.staffId, \"Present\")}\r\n                      />\r\n                      Present\r\n                    </label>\r\n                    <label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`attendance-${staff.staffId}`}\r\n                        value=\"Absent\"\r\n                        checked={attendanceRecord[staff.staffId] === \"Absent\"}\r\n                        onChange={() => handleAttendanceChange(staff.staffId, \"Absent\")}\r\n                      />\r\n                      Absent\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn-lg mt-3\"\r\n                onClick={saveAttendance}\r\n              >\r\n                Save Attendance\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {/* Fetch Data View */}\r\n        {view === \"fetch\" && (\r\n          <div>\r\n            <h5>Fetch Attendance Records</h5>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control mb-3\"\r\n                value={selectedDate}\r\n                onChange={(e) => setSelectedDate(e.target.value)}\r\n              />\r\n            </div>\r\n            <table className=\"table table-striped table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Date</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {attendance.map((record) => (\r\n                  <tr key={record._id}>\r\n                    <td>{record.staffName}</td>\r\n                    <td>{new Date(record.date).toLocaleDateString()}</td>\r\n                    <td>{record.status}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffAttendanceCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}