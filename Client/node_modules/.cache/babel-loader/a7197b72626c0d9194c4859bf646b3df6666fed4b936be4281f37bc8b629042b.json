{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farha\\\\OneDrive\\\\Desktop\\\\TNS\\\\Client\\\\src\\\\pages\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Form, Button, Alert, Spinner, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPage = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [previews, setPreviews] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const handleFileChange = e => {\n    const files = Array.from(e.target.files);\n    if (files.length > 10) {\n      setError(\"You can upload up to 10 images at a time.\");\n      return;\n    }\n    setImages(files);\n    setPreviews(files.map(file => URL.createObjectURL(file)));\n    setError(\"\");\n    setSuccess(\"\");\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (images.length === 0) {\n      setError(\"Please select at least one image.\");\n      return;\n    }\n    const formData = new FormData();\n    images.forEach(image => {\n      formData.append(\"images\", image); // Append the selected images\n    });\n    setUploading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/upload-multiple\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setSuccess(\"Images uploaded successfully!\");\n      setImages([]); // Reset images after upload\n      setPreviews([]); // Reset previews\n    } catch (err) {\n      setError(\"Error uploading images. Please try again.\");\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"upload-page mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '120px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        className: \"p-4 border rounded shadow bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center mb-4\",\n          children: \"Upload Your Images to Gallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleUpload,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFileMultiple\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Images (Max: 10)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              multiple: true,\n              accept: \"image/*\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), previews.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-wrap gap-2 mb-3\",\n            children: previews.map((src, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: src,\n              alt: `Preview ${index}`,\n              className: \"img-thumbnail\",\n              style: {\n                width: \"100px\",\n                height: \"100px\"\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            disabled: uploading,\n            className: \"w-100\",\n            children: uploading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"border\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 28\n            }, this) : \"Upload Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPage, \"TB5lDNS2RgEw5N6fDMWh3ZPRlbI=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","axios","Container","Form","Button","Alert","Spinner","Row","Col","jsxDEV","_jsxDEV","UploadPage","_s","images","setImages","previews","setPreviews","uploading","setUploading","error","setError","success","setSuccess","handleFileChange","e","files","Array","from","target","length","map","file","URL","createObjectURL","handleUpload","preventDefault","formData","FormData","forEach","image","append","response","post","headers","err","className","children","style","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","md","variant","onSubmit","Group","controlId","Label","Control","type","multiple","accept","onChange","src","index","alt","width","height","disabled","as","animation","size","_c","$RefreshReg$"],"sources":["C:/Users/farha/OneDrive/Desktop/TNS/Client/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Form, Button, Alert, Spinner, Row, Col } from \"react-bootstrap\";\r\n\r\nconst UploadPage = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [previews, setPreviews] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const handleFileChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length > 10) {\r\n      setError(\"You can upload up to 10 images at a time.\");\r\n      return;\r\n    }\r\n    setImages(files);\r\n    setPreviews(files.map((file) => URL.createObjectURL(file)));\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (images.length === 0) {\r\n      setError(\"Please select at least one image.\");\r\n      return;\r\n    }\r\n  \r\n    const formData = new FormData();\r\n    images.forEach((image) => {\r\n      formData.append(\"images\", image); // Append the selected images\r\n    });\r\n  \r\n    setUploading(true);\r\n  \r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/upload-multiple\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n  \r\n      setSuccess(\"Images uploaded successfully!\");\r\n      setImages([]); // Reset images after upload\r\n      setPreviews([]); // Reset previews\r\n    } catch (err) {\r\n      setError(\"Error uploading images. Please try again.\");\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Container className=\"upload-page mt-5\">\r\n             <div style={{ marginTop: '120px' }}></div>\r\n\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={8} className=\"p-4 border rounded shadow bg-white\">\r\n          <h3 className=\"text-center mb-4\">Upload Your Images to Gallery</h3>\r\n\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {success && <Alert variant=\"success\">{success}</Alert>}\r\n\r\n          <Form onSubmit={handleUpload}>\r\n            <Form.Group controlId=\"formFileMultiple\" className=\"mb-3\">\r\n              <Form.Label>Select Images (Max: 10)</Form.Label>\r\n              <Form.Control type=\"file\" multiple accept=\"image/*\" onChange={handleFileChange} />\r\n            </Form.Group>\r\n\r\n            {previews.length > 0 && (\r\n              <div className=\"d-flex flex-wrap gap-2 mb-3\">\r\n                {previews.map((src, index) => (\r\n                  <img key={index} src={src} alt={`Preview ${index}`} className=\"img-thumbnail\" style={{ width: \"100px\", height: \"100px\" }} />\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <Button variant=\"primary\" type=\"submit\" disabled={uploading} className=\"w-100\">\r\n              {uploading ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> : \"Upload Images\"}\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UploadPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}